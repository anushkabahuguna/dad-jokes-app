{"version":3,"sources":["emoji-face.png","Joke.js","JokeList.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","this","props","votes","className","onClick","upvote","style","borderColor","getColor","downvote","joke","getEmoji","Component","JokeList","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","handleClick","bind","length","getJokes","a","numJokesToGet","axios","get","headers","Accept","res","has","data","push","id","setState","st","setItem","stringify","alert","delta","prevState","sort","b","src","emoji","alt","handleVote","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eb0b369.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/emoji-face.abbe2118.png\";","import React,{Component} from 'react';\r\nimport './Joke.css';\r\n\r\nclass Joke extends Component {\r\n\r\n    getColor() {\r\n        if (this.props.votes >= 15) {\r\n          return \"#4CAF50\";\r\n        } else if (this.props.votes >= 12) {\r\n          return \"#8BC34A\";\r\n        } else if (this.props.votes >= 9) {\r\n          return \"#CDDC39\";\r\n        } else if (this.props.votes >= 6) {\r\n          return \"#FFEB3B\";\r\n        } else if (this.props.votes >= 3) {\r\n          return \"#FFC107\";\r\n        } else if (this.props.votes >= 0) {\r\n          return \"#FF9800\";\r\n        } else {\r\n          return \"#f44336\";\r\n        }\r\n      }\r\n      getEmoji() {\r\n        if (this.props.votes >= 15) {\r\n          return \"em em-rolling_on_the_floor_laughing\";\r\n        } else if (this.props.votes >= 12) {\r\n          return \"em em-laughing\";\r\n        } else if (this.props.votes >= 9) {\r\n          return \"em em-smiley\";\r\n        } else if (this.props.votes >= 6) {\r\n          return \"em em-slightly_smiling_face\";\r\n        } else if (this.props.votes >= 3) {\r\n          return \"em em-neutral_face\";\r\n        } else if (this.props.votes >= 0) {\r\n          return \"em em-confused\";\r\n        } else {\r\n          return \"em em-angry\";\r\n        }\r\n      }\r\n  render () {\r\n    return (\r\n\r\n      <div className=\"Joke\">\r\n          <div className=\"Joke-buttons\">\r\n              <i onClick={this.props.upvote} className=\"fas fa-arrow-up\"></i>\r\n              <span className=\"Joke-votes\" style={{borderColor:this.getColor()}}>{this.props.votes}</span>\r\n              <i onClick={this.props.downvote} className=\"fas fa-arrow-down\"></i>\r\n          </div>\r\n          <div className=\"Joke-text\">{this.props.joke}</div>\r\n          <div className=\"Joke-smiley\">\r\n          <i className={this.getEmoji()} ></i>\r\n\r\n          </div>\r\n       </div>\r\n       \r\n    )\r\n    }\r\n\r\n}\r\n\r\nexport default Joke;","import React, { Component } from \"react\";\r\nimport \"./JokeList.css\";\r\nimport axios from \"axios\";\r\nimport emoji from \"./emoji-face.png\";\r\nimport Joke from \"./Joke\";\r\n\r\nconst BASE_URL = \"https://icanhazdadjoke.com/\";\r\n\r\nclass JokeList extends Component {\r\n  static defaultProps = {\r\n    numJokesToGet: 10,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jokes: JSON.parse(window.localStorage.getItem(\"jokes\") || \"[]\"),\r\n      loading:false\r\n    };\r\n    this.seenJokes = new Set(this.state.jokes.map(j=>j.joke));\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.state.jokes.length === 0) this.getJokes();\r\n  }\r\n  async getJokes() {\r\n    try{\r\n\r\n    \r\n    let jokes = [];\r\n    while (jokes.length < this.props.numJokesToGet) {\r\n      //get 10 uniqque jokes\r\n      let res = await axios.get(BASE_URL, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      if(!this.seenJokes.has(res.data.joke))\r\n      jokes.push({ joke: res.data.joke, votes: 0, id: res.data.id });\r\n\r\n    }\r\n\r\n    this.setState(st=>({\r\n        jokes:[...st.jokes,...jokes],\r\n        loading:false\r\n    }),\r\n    ()=>window.localStorage.setItem(\"jokes\",JSON.stringify(this.state.jokes))\r\n    );\r\n    //this would just set the new ones\r\n    // window.localStorage.setItem(\"jokes\", JSON.stringify(jokes));\r\n  }\r\n  catch(err)\r\n  {\r\n    alert(err);\r\n    this.setState({loading:false});\r\n  }\r\n  }\r\n  handleVote(id, delta) {\r\n    //delta can be positive or negative\r\n    //also update vote in localStorage\r\n    this.setState((prevState) => {\r\n      return {\r\n        jokes: prevState.jokes.map((joke) => {\r\n          if (id === joke.id) return { ...joke, votes: joke.votes + delta };\r\n          return joke;\r\n        }),\r\n      };\r\n    },\r\n    ()=>window.localStorage.setItem(\"jokes\",JSON.stringify(this.state.jokes))\r\n    );\r\n  }\r\n  handleClick()\r\n  {\r\n      this.setState({loading:true},this.getJokes);\r\n  }\r\n  render() {\r\n      if(this.state.loading)\r\n      {\r\n          return(\r\n              <div className=\"JokeList-spinner\">\r\n                  <i className=\"far fa-8x fa-laugh fa-spin\"/>\r\n                  <h1 className=\"JokeList-title\">Loading...</h1>\r\n              </div>\r\n          )\r\n      }\r\n      let jokes = this.state.jokes.sort((a,b)=>b.votes-a.votes)\r\n    return (\r\n      <div className=\"JokeList\">\r\n        <div className=\"JokeList-sidebar\">\r\n          <h1 className=\"JokeList-title\">\r\n            <span>Dad</span> Jokes\r\n          </h1>\r\n          <img src={emoji} alt=\"emoji-face\" />\r\n          <button onClick={this.handleClick} className=\"JokeList-getmore\">Fetch Jokes</button>\r\n        </div>\r\n        <div className=\"JokeList-jokes\">\r\n          {jokes.map((j) => {\r\n            return (\r\n              <Joke\r\n                key={j.id}\r\n                joke={j.joke}\r\n                votes={j.votes}\r\n                upvote={() => this.handleVote(j.id, 1)}\r\n                downvote={() => this.handleVote(j.id, -1)}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JokeList;\r\n","import './App.css';\nimport JokeList from './JokeList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <JokeList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}